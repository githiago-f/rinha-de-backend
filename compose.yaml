version: '3.5'
services:
  nginx:
    image: nginx
    ports:
      - '8080:80'
    environment:
      NGINX_PORT: 80
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'
    depends_on:
      - api1
      - api2
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - ppl-api

  api1: &app
    build:
      context: ./reactive-api
      dockerfile: Dockerfile
    environment:
      SERVER_PORT: 80
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: pessoas
      DATABASE_JDBC_URL: r2dbc:postgresql://database:5432/people
    hostname: api1
    depends_on:
      - database
    expose:
      - "80"
    networks:
      - ppl-api
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'

  api2:
    <<: *app
    hostname: api2

  database:
    image: postgres:15.5-bookworm
    environment:
      POSTGRES_PASSWORD: pessoas
      POSTGRES_DB: people
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - ppl-api
    ports:
      - '5432:5432'
    expose:
      - '5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: '1.5GB'

volumes:
  db:
    driver: local

networks:
  ppl-api:
    driver: bridge
